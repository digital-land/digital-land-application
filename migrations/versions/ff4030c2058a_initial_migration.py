"""initial migration

Revision ID: ff4030c2058a
Revises:
Create Date: 2025-01-20 13:05:17.433287

"""

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "ff4030c2058a"
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "category",
        sa.Column("reference", sa.String(), nullable=False),
        sa.Column("name", sa.Text(), nullable=True),
        sa.Column("entry_date", sa.Date(), nullable=False),
        sa.Column("start_date", sa.Date(), nullable=True),
        sa.Column("end_date", sa.Date(), nullable=True),
        sa.PrimaryKeyConstraint("reference"),
    )
    op.create_table(
        "specification",
        sa.Column("specification", sa.String(), nullable=False),
        sa.Column("name", sa.Text(), nullable=False),
        sa.Column("entry_date", sa.Date(), nullable=False),
        sa.Column("start_date", sa.Date(), nullable=True),
        sa.Column("end_date", sa.Date(), nullable=True),
        sa.PrimaryKeyConstraint("specification"),
    )
    op.create_table(
        "category_value",
        sa.Column("prefix", sa.Text(), nullable=False),
        sa.Column("reference", sa.Text(), nullable=False),
        sa.Column("name", sa.Text(), nullable=False),
        sa.Column("category_reference", sa.String(), nullable=False),
        sa.Column("entry_date", sa.Date(), nullable=False),
        sa.Column("start_date", sa.Date(), nullable=True),
        sa.Column("end_date", sa.Date(), nullable=True),
        sa.ForeignKeyConstraint(
            ["category_reference"],
            ["category.reference"],
        ),
        sa.PrimaryKeyConstraint("prefix", "reference"),
    )
    op.create_table(
        "dataset",
        sa.Column("dataset", sa.String(), nullable=False),
        sa.Column("parent", sa.String(), nullable=True),
        sa.Column("specification_id", sa.String(), nullable=True),
        sa.Column("is_geography", sa.Boolean(), nullable=False),
        sa.Column("entry_date", sa.Date(), nullable=False),
        sa.Column("start_date", sa.Date(), nullable=True),
        sa.Column("end_date", sa.Date(), nullable=True),
        sa.ForeignKeyConstraint(
            ["parent"],
            ["dataset.dataset"],
        ),
        sa.ForeignKeyConstraint(
            ["specification_id"],
            ["specification.specification"],
        ),
        sa.PrimaryKeyConstraint("dataset"),
    )
    op.create_table(
        "field",
        sa.Column("field", sa.String(), nullable=False),
        sa.Column("name", sa.Text(), nullable=True),
        sa.Column("description", sa.Text(), nullable=True),
        sa.Column("category_reference", sa.Text(), nullable=True),
        sa.Column("datatype", sa.Text(), nullable=True),
        sa.Column("entry_date", sa.Date(), nullable=False),
        sa.Column("start_date", sa.Date(), nullable=True),
        sa.Column("end_date", sa.Date(), nullable=True),
        sa.ForeignKeyConstraint(
            ["category_reference"],
            ["category.reference"],
        ),
        sa.PrimaryKeyConstraint("field"),
    )
    op.create_table(
        "dataset_field",
        sa.Column("dataset", sa.Text(), nullable=False),
        sa.Column("field", sa.Text(), nullable=False),
        sa.ForeignKeyConstraint(
            ["dataset"],
            ["dataset.dataset"],
        ),
        sa.ForeignKeyConstraint(
            ["field"],
            ["field.field"],
        ),
        sa.PrimaryKeyConstraint("dataset", "field"),
    )
    op.create_table(
        "record",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("data", postgresql.JSONB(astext_type=sa.Text()), nullable=False),
        sa.Column("dataset_dataset", sa.String(), nullable=False),
        sa.Column("entry_date", sa.Date(), nullable=False),
        sa.Column("start_date", sa.Date(), nullable=True),
        sa.Column("end_date", sa.Date(), nullable=True),
        sa.ForeignKeyConstraint(
            ["dataset_dataset"],
            ["dataset.dataset"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("record")
    op.drop_table("dataset_field")
    op.drop_table("field")
    op.drop_table("dataset")
    op.drop_table("category_value")
    op.drop_table("specification")
    op.drop_table("category")
    # ### end Alembic commands ###
